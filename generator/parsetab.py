
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocGTHANLTHANGREATER_EQUALLESS_EQUALNOT_EQUALDEQUALleftPLUSMINUSleftMULDIVMODnonassocDPLUSDMINUSleftEQUALrightCLASSPRIVATEPROTECTEDPUBLICBOOL BREAK CHAR CIN CLASS COLON COMMA COMMENTVAR CONTINUE COUT DELETE DEQUAL DIV DMINUS DOT DPLUS ELSE ENDL EQUAL ESC FALSE FLOAT FLOATVAR FOR GREATER_EQUAL GTHAN HASH IF INCLUDE INT INTVAR LBIT LBRACE LESS_EQUAL LPARENTH LSQUARE LTHAN MAIN MINUS MOD MUL NAMESPACE NOT_EQUAL PLUS PRIVATE PROTECTED PUBLIC RBIT RBRACE RETURN RPARENTH RSQUARE SEMICOLON STD STRING STRINGVAR TRUE USING VARNAME VOID WHILEprogram : include using_namespace_std block\n    | using_namespace_std blockblock : block_part block_part main_func\n    | main_funcblock_part : variable_def\n    | class\n    | function\n    | block_part block_partusing_namespace_std : USING NAMESPACE STD SEMICOLONmain_func : VOID MAIN LPARENTH RPARENTH LBRACE func_block RBRACE SEMICOLON\n    | INT MAIN LPARENTH RPARENTH LBRACE func_block RBRACE SEMICOLON\n    | INT MAIN LPARENTH RPARENTH LBRACE RBRACE SEMICOLONparameters : type VARNAME\n    | type VARNAME COMMA parametersif_statement : IF LPARENTH condition RPARENTH LBRACE func_block RBRACE else_block\n    | IF LPARENTH condition RPARENTH LBRACE func_block RBRACEelse_block : ELSE LBRACE func_block RBRACEcondition : var_value comparator var_value\n    | VARNAME comparator VARNAME\n    | VARNAME comparator var_value\n    | var_value comparator VARNAMEwhile_statement : WHILE LPARENTH condition RPARENTH LBRACE func_block RBRACEfor_statement : FOR LPARENTH INT VARNAME EQUAL INTVAR SEMICOLON VARNAME comparator INTVAR SEMICOLON VARNAME math_operator EQUAL INTVAR RPARENTH LBRACE func_block RBRACE\n    | FOR LPARENTH SEMICOLON SEMICOLON RPARENTH LBRACE func_block RBRACEclass : CLASS VARNAME LBRACE class_variable class_functions RBRACE SEMICOLON\n    | CLASS VARNAME LBRACE class_functions RBRACE SEMICOLON\n    | CLASS VARNAME LBRACE class_variable RBRACE SEMICOLONreturn_statement : RETURN var_value SEMICOLON\n    | RETURN SEMICOLONassign_var : VARNAME EQUAL var_value SEMICOLON\n    | VARNAME EQUAL calculation SEMICOLONvariable_def : declare_var\n    | declare_assign_vardeclare_assign_var : type VARNAME EQUAL var_value SEMICOLON\n    | type VARNAME EQUAL calculation SEMICOLONdeclare_var : type VARNAME SEMICOLONclass_variable : access_modifier COLON variable_def\n    | variable_def\n    | assign_var\n    | class_variable class_variableclass_functions : access_modifier COLON function\n    | function\n    | class_functions class_functionsfunction : return_type VARNAME LPARENTH parameters RPARENTH LBRACE func_block RBRACE\n    | return_type VARNAME LPARENTH RPARENTH LBRACE func_block RBRACEaccess_modifier : PUBLIC\n    | PRIVATE\n    | PROTECTEDfunc_block : statement\n    | statement return_statement\n    | return_statementstatement : variable_def\n    | if_statement\n    | while_statement\n    | for_statement\n    | print_out\n    | cin_in\n    | VARNAME EQUAL calculation SEMICOLON\n    | assign_var\n    | statement statementprint_out : COUT cout_expression_string SEMICOLONcout_expression_string : cout_expression cout_expression_string\n    | cout_expressioncout_expression : LBIT printableprintable : var_value\n    | VARNAME\n    | ENDL\n    | STRINGVARcalculation : number math_operator numberinclude : HASH INCLUDE LTHAN VARNAME GTHANtype : INT\n    | FLOAT\n    | CHAR\n    | STRING\n    | BOOLcin_in : CIN RBIT VARNAME SEMICOLONnumber : INTVAR\n    | FLOATVARreturn_type : type\n    | VOIDmath_operator : PLUS\n    | MINUS\n    | MUL\n    | DIV\n    | MODcomparator : GTHAN\n    | LTHAN\n    | LESS_EQUAL\n    | DEQUAL\n    | GREATER_EQUAL\n    | NOT_EQUALvar_value : INTVAR\n    | FLOATVAR\n    | STRINGVAR\n    | bool_valuebool_value : TRUE\n    | FALSE'
    
_lr_action_items = {'HASH':([0,],[4,]),'USING':([0,2,71,],[5,5,-70,]),'$end':([1,7,9,26,38,148,156,173,],[0,-2,-4,-1,-3,-12,-10,-11,]),'VOID':([3,6,8,10,11,12,15,16,27,37,41,43,46,50,51,53,54,55,75,76,80,84,88,89,120,121,122,123,124,125,149,150,152,154,174,],[13,13,28,-5,-6,-7,-32,-33,13,28,28,-36,-9,28,28,-38,-39,-42,-40,28,28,28,-34,-35,-27,28,-26,28,-37,-41,-30,-31,-25,-45,-44,]),'INT':([3,6,8,10,11,12,15,16,27,37,41,42,43,46,50,51,53,54,55,72,73,75,76,80,84,86,88,89,97,99,100,101,102,103,104,106,120,121,122,123,124,125,126,128,133,142,149,150,151,152,154,165,174,175,188,189,194,200,201,202,205,208,209,213,220,222,],[14,14,29,-5,-6,-7,-32,-33,14,29,29,29,-36,-9,29,29,-38,-39,-42,29,29,29,29,29,29,29,-34,-35,29,-52,-53,-54,-55,-56,-57,-59,-27,29,-26,29,-37,-41,29,29,29,163,-30,-31,29,-25,-45,-61,-44,-31,-76,29,29,29,-16,-22,-15,-24,29,-17,29,-23,]),'CLASS':([3,6,8,10,11,12,15,16,27,37,43,46,88,89,120,122,152,154,174,],[17,17,17,-5,-6,-7,-32,-33,17,17,-36,-9,-34,-35,-27,-26,-25,-45,-44,]),'FLOAT':([3,6,8,10,11,12,15,16,27,37,41,42,43,46,50,51,53,54,55,72,73,75,76,80,84,86,88,89,97,99,100,101,102,103,104,106,120,121,122,123,124,125,126,128,133,149,150,151,152,154,165,174,175,188,189,194,200,201,202,205,208,209,213,220,222,],[20,20,20,-5,-6,-7,-32,-33,20,20,20,20,-36,-9,20,20,-38,-39,-42,20,20,20,20,20,20,20,-34,-35,20,-52,-53,-54,-55,-56,-57,-59,-27,20,-26,20,-37,-41,20,20,20,-30,-31,20,-25,-45,-61,-44,-31,-76,20,20,20,-16,-22,-15,-24,20,-17,20,-23,]),'CHAR':([3,6,8,10,11,12,15,16,27,37,41,42,43,46,50,51,53,54,55,72,73,75,76,80,84,86,88,89,97,99,100,101,102,103,104,106,120,121,122,123,124,125,126,128,133,149,150,151,152,154,165,174,175,188,189,194,200,201,202,205,208,209,213,220,222,],[21,21,21,-5,-6,-7,-32,-33,21,21,21,21,-36,-9,21,21,-38,-39,-42,21,21,21,21,21,21,21,-34,-35,21,-52,-53,-54,-55,-56,-57,-59,-27,21,-26,21,-37,-41,21,21,21,-30,-31,21,-25,-45,-61,-44,-31,-76,21,21,21,-16,-22,-15,-24,21,-17,21,-23,]),'STRING':([3,6,8,10,11,12,15,16,27,37,41,42,43,46,50,51,53,54,55,72,73,75,76,80,84,86,88,89,97,99,100,101,102,103,104,106,120,121,122,123,124,125,126,128,133,149,150,151,152,154,165,174,175,188,189,194,200,201,202,205,208,209,213,220,222,],[22,22,22,-5,-6,-7,-32,-33,22,22,22,22,-36,-9,22,22,-38,-39,-42,22,22,22,22,22,22,22,-34,-35,22,-52,-53,-54,-55,-56,-57,-59,-27,22,-26,22,-37,-41,22,22,22,-30,-31,22,-25,-45,-61,-44,-31,-76,22,22,22,-16,-22,-15,-24,22,-17,22,-23,]),'BOOL':([3,6,8,10,11,12,15,16,27,37,41,42,43,46,50,51,53,54,55,72,73,75,76,80,84,86,88,89,97,99,100,101,102,103,104,106,120,121,122,123,124,125,126,128,133,149,150,151,152,154,165,174,175,188,189,194,200,201,202,205,208,209,213,220,222,],[23,23,23,-5,-6,-7,-32,-33,23,23,23,23,-36,-9,23,23,-38,-39,-42,23,23,23,23,23,23,23,-34,-35,23,-52,-53,-54,-55,-56,-57,-59,-27,23,-26,23,-37,-41,23,23,23,-30,-31,23,-25,-45,-61,-44,-31,-76,23,23,23,-16,-22,-15,-24,23,-17,23,-23,]),'INCLUDE':([4,],[24,]),'NAMESPACE':([5,],[25,]),'MAIN':([13,14,],[30,31,]),'VARNAME':([13,14,15,16,17,18,19,20,21,22,23,28,29,35,41,43,50,53,54,61,72,73,75,79,83,86,88,89,97,99,100,101,102,103,104,106,113,124,126,133,140,141,145,146,149,150,163,165,175,177,178,179,180,181,182,183,184,188,189,194,200,201,202,203,205,208,209,213,214,220,222,],[-80,-71,-32,-33,32,33,34,-72,-73,-74,-75,-80,-71,45,49,-36,49,-38,-39,87,105,105,49,34,-79,105,-34,-35,105,-52,-53,-54,-55,-56,-57,-59,34,-37,105,105,161,161,169,172,-30,-31,186,-61,-31,191,-86,-87,-88,-89,-90,-91,192,-76,105,105,105,-16,-22,207,-15,-24,105,-17,215,105,-23,]),'RBRACE':([15,16,43,50,51,53,54,55,73,75,76,80,88,89,96,97,98,99,100,101,102,103,104,106,114,124,125,127,133,134,137,149,150,153,154,158,165,174,175,188,197,198,201,202,204,205,208,211,213,221,222,],[-32,-33,-36,77,81,-38,-39,-42,115,-40,119,-43,-34,-35,132,-49,-51,-52,-53,-54,-55,-56,-57,-59,147,-37,-41,154,-60,-50,-29,-30,-31,174,-45,-28,-61,-44,-31,-76,201,202,-16,-22,208,-15,-24,213,-17,222,-23,]),'PUBLIC':([15,16,41,43,50,51,53,54,55,75,76,80,88,89,124,125,149,150,154,174,],[-32,-33,56,-36,56,56,-38,-39,-42,56,56,56,-34,-35,-37,-41,-30,-31,-45,-44,]),'PRIVATE':([15,16,41,43,50,51,53,54,55,75,76,80,88,89,124,125,149,150,154,174,],[-32,-33,57,-36,57,57,-38,-39,-42,57,57,57,-34,-35,-37,-41,-30,-31,-45,-44,]),'PROTECTED':([15,16,41,43,50,51,53,54,55,75,76,80,88,89,124,125,149,150,154,174,],[-32,-33,58,-36,58,58,-38,-39,-42,58,58,58,-34,-35,-37,-41,-30,-31,-45,-44,]),'RETURN':([15,16,43,72,73,86,88,89,97,99,100,101,102,103,104,106,126,133,149,165,175,188,189,194,200,201,202,205,208,209,213,220,222,],[-32,-33,-36,107,107,107,-34,-35,107,-52,-53,-54,-55,-56,-57,-59,107,-60,-30,-61,-31,-76,107,107,107,-16,-22,-15,-24,107,-17,107,-23,]),'IF':([15,16,43,72,73,86,88,89,97,99,100,101,102,103,104,106,126,133,149,165,175,188,189,194,200,201,202,205,208,209,213,220,222,],[-32,-33,-36,108,108,108,-34,-35,108,-52,-53,-54,-55,-56,-57,-59,108,108,-30,-61,-31,-76,108,108,108,-16,-22,-15,-24,108,-17,108,-23,]),'WHILE':([15,16,43,72,73,86,88,89,97,99,100,101,102,103,104,106,126,133,149,165,175,188,189,194,200,201,202,205,208,209,213,220,222,],[-32,-33,-36,109,109,109,-34,-35,109,-52,-53,-54,-55,-56,-57,-59,109,109,-30,-61,-31,-76,109,109,109,-16,-22,-15,-24,109,-17,109,-23,]),'FOR':([15,16,43,72,73,86,88,89,97,99,100,101,102,103,104,106,126,133,149,165,175,188,189,194,200,201,202,205,208,209,213,220,222,],[-32,-33,-36,110,110,110,-34,-35,110,-52,-53,-54,-55,-56,-57,-59,110,110,-30,-61,-31,-76,110,110,110,-16,-22,-15,-24,110,-17,110,-23,]),'COUT':([15,16,43,72,73,86,88,89,97,99,100,101,102,103,104,106,126,133,149,165,175,188,189,194,200,201,202,205,208,209,213,220,222,],[-32,-33,-36,111,111,111,-34,-35,111,-52,-53,-54,-55,-56,-57,-59,111,111,-30,-61,-31,-76,111,111,111,-16,-22,-15,-24,111,-17,111,-23,]),'CIN':([15,16,43,72,73,86,88,89,97,99,100,101,102,103,104,106,126,133,149,165,175,188,189,194,200,201,202,205,208,209,213,220,222,],[-32,-33,-36,112,112,112,-34,-35,112,-52,-53,-54,-55,-56,-57,-59,112,112,-30,-61,-31,-76,112,112,112,-16,-22,-15,-24,112,-17,112,-23,]),'LTHAN':([24,66,67,69,70,138,139,160,161,207,],[35,-94,-95,-96,-97,-92,-93,179,179,179,]),'STD':([25,],[36,]),'LPARENTH':([30,31,33,108,109,110,],[39,40,42,140,141,142,]),'LBRACE':([32,47,48,60,85,176,185,196,206,219,],[41,72,73,86,126,189,194,200,209,220,]),'SEMICOLON':([34,36,62,63,64,65,66,67,69,70,77,81,107,115,116,117,119,129,130,131,132,136,138,139,142,143,144,147,157,164,166,167,168,169,170,171,172,199,212,],[43,46,88,89,-92,-93,-94,-95,-96,-97,120,122,137,148,149,150,152,-69,-77,-78,156,158,-92,-93,164,165,-63,173,175,187,-62,-64,-65,-66,-67,-68,188,203,214,]),'EQUAL':([34,49,91,92,93,94,95,105,186,216,],[44,74,-81,-82,-83,-84,-85,135,195,217,]),'RPARENTH':([39,40,42,59,66,67,69,70,87,138,139,155,159,162,187,190,191,192,193,218,],[47,48,60,85,-94,-95,-96,-97,-13,-92,-93,-14,176,185,196,-18,-21,-19,-20,219,]),'INTVAR':([44,74,90,91,92,93,94,95,107,135,140,141,145,177,178,179,180,181,182,183,184,195,210,217,],[64,64,130,-81,-82,-83,-84,-85,138,64,138,138,138,138,-86,-87,-88,-89,-90,-91,138,199,212,218,]),'FLOATVAR':([44,74,90,91,92,93,94,95,107,135,140,141,145,177,178,179,180,181,182,183,184,],[65,65,131,-81,-82,-83,-84,-85,139,65,139,139,139,139,-86,-87,-88,-89,-90,-91,139,]),'STRINGVAR':([44,74,107,135,140,141,145,177,178,179,180,181,182,183,184,],[66,66,66,66,66,66,171,66,-86,-87,-88,-89,-90,-91,66,]),'TRUE':([44,74,107,135,140,141,145,177,178,179,180,181,182,183,184,],[69,69,69,69,69,69,69,69,-86,-87,-88,-89,-90,-91,69,]),'FALSE':([44,74,107,135,140,141,145,177,178,179,180,181,182,183,184,],[70,70,70,70,70,70,70,70,-86,-87,-88,-89,-90,-91,70,]),'GTHAN':([45,66,67,69,70,138,139,160,161,207,],[71,-94,-95,-96,-97,-92,-93,178,178,178,]),'COLON':([52,56,57,58,78,82,118,],[84,-46,-47,-48,121,123,151,]),'PLUS':([64,65,68,215,],[-77,-78,91,91,]),'MINUS':([64,65,68,215,],[-77,-78,92,92,]),'MUL':([64,65,68,215,],[-77,-78,93,93,]),'DIV':([64,65,68,215,],[-77,-78,94,94,]),'MOD':([64,65,68,215,],[-77,-78,95,95,]),'LESS_EQUAL':([66,67,69,70,138,139,160,161,207,],[-94,-95,-96,-97,-92,-93,180,180,180,]),'DEQUAL':([66,67,69,70,138,139,160,161,207,],[-94,-95,-96,-97,-92,-93,181,181,181,]),'GREATER_EQUAL':([66,67,69,70,138,139,160,161,207,],[-94,-95,-96,-97,-92,-93,182,182,182,]),'NOT_EQUAL':([66,67,69,70,138,139,160,161,207,],[-94,-95,-96,-97,-92,-93,183,183,183,]),'LBIT':([67,69,70,111,138,139,144,167,168,169,170,171,],[-95,-96,-97,145,-92,-93,145,-64,-65,-66,-67,-68,]),'COMMA':([87,],[128,]),'RBIT':([112,],[146,]),'ENDL':([145,],[170,]),'ELSE':([201,],[206,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'include':([0,],[2,]),'using_namespace_std':([0,2,],[3,6,]),'block':([3,6,],[7,26,]),'block_part':([3,6,8,27,37,],[8,8,27,37,37,]),'main_func':([3,6,27,],[9,9,38,]),'variable_def':([3,6,8,27,37,41,50,72,73,75,84,86,97,121,126,133,151,189,194,200,209,220,],[10,10,10,10,10,53,53,99,99,53,124,99,99,124,99,99,124,99,99,99,99,99,]),'class':([3,6,8,27,37,],[11,11,11,11,11,]),'function':([3,6,8,27,37,41,50,51,76,80,84,121,123,],[12,12,12,12,12,55,55,55,55,55,125,125,125,]),'declare_var':([3,6,8,27,37,41,50,72,73,75,84,86,97,121,126,133,151,189,194,200,209,220,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'declare_assign_var':([3,6,8,27,37,41,50,72,73,75,84,86,97,121,126,133,151,189,194,200,209,220,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'return_type':([3,6,8,27,37,41,50,51,76,80,84,121,123,],[18,18,18,18,18,18,18,18,18,18,18,18,18,]),'type':([3,6,8,27,37,41,42,50,51,72,73,75,76,80,84,86,97,121,123,126,128,133,151,189,194,200,209,220,],[19,19,19,19,19,19,61,79,83,113,113,113,83,83,19,113,113,79,83,113,61,113,113,113,113,113,113,113,]),'class_variable':([41,50,75,],[50,75,75,]),'class_functions':([41,50,51,76,80,],[51,76,80,80,80,]),'access_modifier':([41,50,51,75,76,80,],[52,78,82,118,82,82,]),'assign_var':([41,50,72,73,75,86,97,126,133,189,194,200,209,220,],[54,54,106,106,54,106,106,106,106,106,106,106,106,106,]),'parameters':([42,128,],[59,155,]),'var_value':([44,74,107,135,140,141,145,177,184,],[62,116,136,116,160,160,168,190,193,]),'calculation':([44,74,135,],[63,117,157,]),'bool_value':([44,74,107,135,140,141,145,177,184,],[67,67,67,67,67,67,67,67,67,]),'number':([44,74,90,135,],[68,68,129,68,]),'math_operator':([68,215,],[90,216,]),'func_block':([72,73,86,126,189,194,200,209,220,],[96,114,127,153,197,198,204,211,221,]),'statement':([72,73,86,97,126,133,189,194,200,209,220,],[97,97,97,133,97,133,97,97,97,97,97,]),'return_statement':([72,73,86,97,126,189,194,200,209,220,],[98,98,98,134,98,98,98,98,98,98,]),'if_statement':([72,73,86,97,126,133,189,194,200,209,220,],[100,100,100,100,100,100,100,100,100,100,100,]),'while_statement':([72,73,86,97,126,133,189,194,200,209,220,],[101,101,101,101,101,101,101,101,101,101,101,]),'for_statement':([72,73,86,97,126,133,189,194,200,209,220,],[102,102,102,102,102,102,102,102,102,102,102,]),'print_out':([72,73,86,97,126,133,189,194,200,209,220,],[103,103,103,103,103,103,103,103,103,103,103,]),'cin_in':([72,73,86,97,126,133,189,194,200,209,220,],[104,104,104,104,104,104,104,104,104,104,104,]),'cout_expression_string':([111,144,],[143,166,]),'cout_expression':([111,144,],[144,144,]),'condition':([140,141,],[159,162,]),'printable':([145,],[167,]),'comparator':([160,161,207,],[177,184,210,]),'else_block':([201,],[205,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> include using_namespace_std block','program',3,'p_program','generate.py',299),
  ('program -> using_namespace_std block','program',2,'p_program','generate.py',300),
  ('block -> block_part block_part main_func','block',3,'p_block','generate.py',307),
  ('block -> main_func','block',1,'p_block','generate.py',308),
  ('block_part -> variable_def','block_part',1,'p_block_part','generate.py',313),
  ('block_part -> class','block_part',1,'p_block_part','generate.py',314),
  ('block_part -> function','block_part',1,'p_block_part','generate.py',315),
  ('block_part -> block_part block_part','block_part',2,'p_block_part','generate.py',316),
  ('using_namespace_std -> USING NAMESPACE STD SEMICOLON','using_namespace_std',4,'p_using_namespace_std','generate.py',322),
  ('main_func -> VOID MAIN LPARENTH RPARENTH LBRACE func_block RBRACE SEMICOLON','main_func',8,'p_main_func','generate.py',328),
  ('main_func -> INT MAIN LPARENTH RPARENTH LBRACE func_block RBRACE SEMICOLON','main_func',8,'p_main_func','generate.py',329),
  ('main_func -> INT MAIN LPARENTH RPARENTH LBRACE RBRACE SEMICOLON','main_func',7,'p_main_func','generate.py',330),
  ('parameters -> type VARNAME','parameters',2,'p_parameters','generate.py',336),
  ('parameters -> type VARNAME COMMA parameters','parameters',4,'p_parameters','generate.py',337),
  ('if_statement -> IF LPARENTH condition RPARENTH LBRACE func_block RBRACE else_block','if_statement',8,'p_if_statement','generate.py',346),
  ('if_statement -> IF LPARENTH condition RPARENTH LBRACE func_block RBRACE','if_statement',7,'p_if_statement','generate.py',347),
  ('else_block -> ELSE LBRACE func_block RBRACE','else_block',4,'p_else_block','generate.py',362),
  ('condition -> var_value comparator var_value','condition',3,'p_condition','generate.py',369),
  ('condition -> VARNAME comparator VARNAME','condition',3,'p_condition','generate.py',370),
  ('condition -> VARNAME comparator var_value','condition',3,'p_condition','generate.py',371),
  ('condition -> var_value comparator VARNAME','condition',3,'p_condition','generate.py',372),
  ('while_statement -> WHILE LPARENTH condition RPARENTH LBRACE func_block RBRACE','while_statement',7,'p_while_statement','generate.py',393),
  ('for_statement -> FOR LPARENTH INT VARNAME EQUAL INTVAR SEMICOLON VARNAME comparator INTVAR SEMICOLON VARNAME math_operator EQUAL INTVAR RPARENTH LBRACE func_block RBRACE','for_statement',19,'p_for_statement','generate.py',399),
  ('for_statement -> FOR LPARENTH SEMICOLON SEMICOLON RPARENTH LBRACE func_block RBRACE','for_statement',8,'p_for_statement','generate.py',400),
  ('class -> CLASS VARNAME LBRACE class_variable class_functions RBRACE SEMICOLON','class',7,'p_class','generate.py',406),
  ('class -> CLASS VARNAME LBRACE class_functions RBRACE SEMICOLON','class',6,'p_class','generate.py',407),
  ('class -> CLASS VARNAME LBRACE class_variable RBRACE SEMICOLON','class',6,'p_class','generate.py',408),
  ('return_statement -> RETURN var_value SEMICOLON','return_statement',3,'p_return_satement','generate.py',414),
  ('return_statement -> RETURN SEMICOLON','return_statement',2,'p_return_satement','generate.py',415),
  ('assign_var -> VARNAME EQUAL var_value SEMICOLON','assign_var',4,'p_assign_var','generate.py',421),
  ('assign_var -> VARNAME EQUAL calculation SEMICOLON','assign_var',4,'p_assign_var','generate.py',422),
  ('variable_def -> declare_var','variable_def',1,'p_variable_def','generate.py',428),
  ('variable_def -> declare_assign_var','variable_def',1,'p_variable_def','generate.py',429),
  ('declare_assign_var -> type VARNAME EQUAL var_value SEMICOLON','declare_assign_var',5,'p_declare_assign_var','generate.py',435),
  ('declare_assign_var -> type VARNAME EQUAL calculation SEMICOLON','declare_assign_var',5,'p_declare_assign_var','generate.py',436),
  ('declare_var -> type VARNAME SEMICOLON','declare_var',3,'p_declare_var','generate.py',442),
  ('class_variable -> access_modifier COLON variable_def','class_variable',3,'p_class_variable','generate.py',449),
  ('class_variable -> variable_def','class_variable',1,'p_class_variable','generate.py',450),
  ('class_variable -> assign_var','class_variable',1,'p_class_variable','generate.py',451),
  ('class_variable -> class_variable class_variable','class_variable',2,'p_class_variable','generate.py',452),
  ('class_functions -> access_modifier COLON function','class_functions',3,'p_class_functions','generate.py',458),
  ('class_functions -> function','class_functions',1,'p_class_functions','generate.py',459),
  ('class_functions -> class_functions class_functions','class_functions',2,'p_class_functions','generate.py',460),
  ('function -> return_type VARNAME LPARENTH parameters RPARENTH LBRACE func_block RBRACE','function',8,'p_function','generate.py',466),
  ('function -> return_type VARNAME LPARENTH RPARENTH LBRACE func_block RBRACE','function',7,'p_function','generate.py',467),
  ('access_modifier -> PUBLIC','access_modifier',1,'p_access_modifier','generate.py',473),
  ('access_modifier -> PRIVATE','access_modifier',1,'p_access_modifier','generate.py',474),
  ('access_modifier -> PROTECTED','access_modifier',1,'p_access_modifier','generate.py',475),
  ('func_block -> statement','func_block',1,'p_func_block','generate.py',484),
  ('func_block -> statement return_statement','func_block',2,'p_func_block','generate.py',485),
  ('func_block -> return_statement','func_block',1,'p_func_block','generate.py',486),
  ('statement -> variable_def','statement',1,'p_statement','generate.py',492),
  ('statement -> if_statement','statement',1,'p_statement','generate.py',493),
  ('statement -> while_statement','statement',1,'p_statement','generate.py',494),
  ('statement -> for_statement','statement',1,'p_statement','generate.py',495),
  ('statement -> print_out','statement',1,'p_statement','generate.py',496),
  ('statement -> cin_in','statement',1,'p_statement','generate.py',497),
  ('statement -> VARNAME EQUAL calculation SEMICOLON','statement',4,'p_statement','generate.py',498),
  ('statement -> assign_var','statement',1,'p_statement','generate.py',499),
  ('statement -> statement statement','statement',2,'p_statement','generate.py',500),
  ('print_out -> COUT cout_expression_string SEMICOLON','print_out',3,'p_print_out','generate.py',506),
  ('cout_expression_string -> cout_expression cout_expression_string','cout_expression_string',2,'p_cout_expression_string','generate.py',512),
  ('cout_expression_string -> cout_expression','cout_expression_string',1,'p_cout_expression_string','generate.py',513),
  ('cout_expression -> LBIT printable','cout_expression',2,'p_cout_expression','generate.py',529),
  ('printable -> var_value','printable',1,'p_printable','generate.py',535),
  ('printable -> VARNAME','printable',1,'p_printable','generate.py',536),
  ('printable -> ENDL','printable',1,'p_printable','generate.py',537),
  ('printable -> STRINGVAR','printable',1,'p_printable','generate.py',538),
  ('calculation -> number math_operator number','calculation',3,'p_calculation','generate.py',549),
  ('include -> HASH INCLUDE LTHAN VARNAME GTHAN','include',5,'p_include','generate.py',588),
  ('type -> INT','type',1,'p_type','generate.py',596),
  ('type -> FLOAT','type',1,'p_type','generate.py',597),
  ('type -> CHAR','type',1,'p_type','generate.py',598),
  ('type -> STRING','type',1,'p_type','generate.py',599),
  ('type -> BOOL','type',1,'p_type','generate.py',600),
  ('cin_in -> CIN RBIT VARNAME SEMICOLON','cin_in',4,'p_cin_in','generate.py',607),
  ('number -> INTVAR','number',1,'p_number','generate.py',626),
  ('number -> FLOATVAR','number',1,'p_number','generate.py',627),
  ('return_type -> type','return_type',1,'p_return_type','generate.py',633),
  ('return_type -> VOID','return_type',1,'p_return_type','generate.py',634),
  ('math_operator -> PLUS','math_operator',1,'p_math_operator','generate.py',642),
  ('math_operator -> MINUS','math_operator',1,'p_math_operator','generate.py',643),
  ('math_operator -> MUL','math_operator',1,'p_math_operator','generate.py',644),
  ('math_operator -> DIV','math_operator',1,'p_math_operator','generate.py',645),
  ('math_operator -> MOD','math_operator',1,'p_math_operator','generate.py',646),
  ('comparator -> GTHAN','comparator',1,'p_comparator','generate.py',652),
  ('comparator -> LTHAN','comparator',1,'p_comparator','generate.py',653),
  ('comparator -> LESS_EQUAL','comparator',1,'p_comparator','generate.py',654),
  ('comparator -> DEQUAL','comparator',1,'p_comparator','generate.py',655),
  ('comparator -> GREATER_EQUAL','comparator',1,'p_comparator','generate.py',656),
  ('comparator -> NOT_EQUAL','comparator',1,'p_comparator','generate.py',657),
  ('var_value -> INTVAR','var_value',1,'p_var_value','generate.py',663),
  ('var_value -> FLOATVAR','var_value',1,'p_var_value','generate.py',664),
  ('var_value -> STRINGVAR','var_value',1,'p_var_value','generate.py',665),
  ('var_value -> bool_value','var_value',1,'p_var_value','generate.py',666),
  ('bool_value -> TRUE','bool_value',1,'p_bool_value','generate.py',679),
  ('bool_value -> FALSE','bool_value',1,'p_bool_value','generate.py',680),
]
